name: CI

on: [ push, pull_request, repository_dispatch ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      - name: Gradle wrapper validation
        uses: gradle/wrapper-validation-action@v1
      - name: Set up Zulu JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
      - name: Cache SonarCloud packages
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-
      - name: Checkout and build conductor fork code
        id: conductor-fork-build
        run: |
          mkdir -p $GITHUB_WORKSPACE/assembled/ui/
          mkdir -p $GITHUB_WORKSPACE/assembled/libs/
          CONDUCTOR_DIR=$(mktemp -d)
          git clone --single-branch --branch "main" "https://github.com/Netflix/conductor.git" "$CONDUCTOR_DIR"
          cd $CONDUCTOR_DIR
          ./gradlew build publishToMavenLocal -x test
          CONDUCTOR_VERSION=$(./gradlew properties --no-daemon --console=plain -q | grep "^version:" | awk '{printf $2}')
          echo "::set-output name=CONDUCTOR_VERSION::$CONDUCTOR_VERSION"
          echo ">>>> List the maven local repo files"
          ls -ltr ~/.m2/repository/com/netflix/conductor/conductor-server/
      - name: Build with Gradle
        if: github.ref != 'refs/heads/main'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          echo "Building against Conductor core version $CONDUCTOR_VERSION"
          ./gradlew -Dconductor.version=$CONDUCTOR_VERSION build --scan